name: Aurora Data Update

on:
  schedule:
    # Run every 15 minutes
    - cron: '*/15 * * * *'
  # Allow manual triggering
  workflow_dispatch:
  # Run on pushes to main branch for testing
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  update-aurora-data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Use a token that can push back to the repo
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Run aurora data processor
      run: |
        cd backend
        python geonet_data.py
      env:
        # No AWS credentials needed for anonymous S3 access to GeoNet data
        AWS_DEFAULT_REGION: ap-southeast-2

    - name: Check if status.json was generated
      run: |
        if [ ! -f docs/status.json ]; then
          echo "Error: status.json was not generated"
          exit 1
        fi
        echo "status.json generated successfully"
        ls -la docs/status.json

    - name: Commit and push if changed
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Add the generated file
        git add docs/status.json

        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          # Commit with timestamp
          git commit -m "Update aurora data: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          git push
          echo "Aurora data updated and committed"
        fi

    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: aurora-data-logs
        path: |
          docs/status.json
        retention-days: 7
